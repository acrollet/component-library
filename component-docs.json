{
  "timestamp": "2021-09-03T20:24:17",
  "compiler": {
    "name": "@stencil/core",
    "version": "2.4.0",
    "typescriptVersion": "4.1.3"
  },
  "components": [
    {
      "filePath": "./src/components/my-component/my-component.tsx",
      "encapsulation": "shadow",
      "tag": "my-component",
      "readme": "# my-component\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "first",
          "type": "string",
          "mutable": false,
          "attr": "first",
          "reflectToAttr": false,
          "docs": "The first name",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "last",
          "type": "string",
          "mutable": false,
          "attr": "last",
          "reflectToAttr": false,
          "docs": "The last name",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "middle",
          "type": "string",
          "mutable": false,
          "attr": "middle",
          "reflectToAttr": false,
          "docs": "The middle name",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-accordion/va-accordion.tsx",
      "encapsulation": "shadow",
      "tag": "va-accordion",
      "docs": "Accordions are a list of headers that can be clicked to hide or reveal additional content.\n\n## Usability\n### When to use\n- Users only need a few specific pieces of content within a page.\n- Information needs to be displayed in a small space.\n\n### When to consider something else\n- If visitors need to see most or all of the information on a page. Use well-formatted text instead.\n- If there is not enough content to warrant condensing. Accordions increase cognitive load and interaction cost, as users have to make decisions about what headers to click on.\n\n### Guidance\n\n- Allow users to click anywhere in the header area to expand or collapse the content; a larger target is easier to manipulate.\n- Make sure interactive elements within the collapsible region are far enough from the headers that users donâ€™t accidentally trigger a collapse. (The exact distance depends on the device.",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "bordered",
          "type": "boolean",
          "mutable": false,
          "attr": "bordered",
          "reflectToAttr": false,
          "docs": "Whether or not the accordion items will have borders",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disableAnalytics",
          "type": "boolean",
          "mutable": false,
          "attr": "disable-analytics",
          "reflectToAttr": false,
          "docs": "If true, doesn't fire the CustomEvent which can be used for analytics tracking.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "openSingle",
          "type": "boolean",
          "mutable": false,
          "attr": "open-single",
          "reflectToAttr": false,
          "docs": "True if only a single item can be opened at once",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "component-library-analytics",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "accordionItemToggled",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-accordion/va-accordion-item.tsx",
      "encapsulation": "shadow",
      "tag": "va-accordion-item",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "header",
          "type": "string",
          "mutable": false,
          "attr": "header",
          "reflectToAttr": false,
          "docs": "The accordion item header text",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "level",
          "type": "number",
          "mutable": false,
          "attr": "level",
          "reflectToAttr": false,
          "docs": "Header level for button wrapper. Must be between 1 and 6",
          "docsTags": [],
          "default": "2",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "open",
          "type": "boolean",
          "mutable": false,
          "attr": "open",
          "reflectToAttr": false,
          "docs": "True if the item is open",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "subheader",
          "type": "string",
          "mutable": false,
          "attr": "subheader",
          "reflectToAttr": false,
          "docs": "Optional accordion item subheader text. Default is null.",
          "docsTags": [],
          "default": "null",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "accordionItemToggled",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "This event is fired so that `<va-accordion>` can manage which items are opened or closed",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-alert/va-alert.tsx",
      "encapsulation": "shadow",
      "tag": "va-alert",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "backgroundOnly",
          "type": "boolean",
          "mutable": false,
          "attr": "background-only",
          "reflectToAttr": false,
          "docs": "If true, renders the alert with only a background color corresponding\nto the status - no icon or left border.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "closeBtnAriaLabel",
          "type": "string",
          "mutable": false,
          "attr": "close-btn-aria-label",
          "reflectToAttr": false,
          "docs": "Aria-label text for the close button.",
          "docsTags": [],
          "default": "'Close notification'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "closeable",
          "type": "boolean",
          "mutable": false,
          "attr": "closeable",
          "reflectToAttr": false,
          "docs": "If true, a close button will be displayed.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disableAnalytics",
          "type": "boolean",
          "mutable": false,
          "attr": "disable-analytics",
          "reflectToAttr": false,
          "docs": "If true, doesn't fire the CustomEvent which can be used for analytics tracking.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "status",
          "type": "string",
          "mutable": false,
          "attr": "status",
          "reflectToAttr": false,
          "docs": "Determines the icon and border/background color.\nOne of `info`, `error`, `success`, `warning`, or `continue`",
          "docsTags": [],
          "default": "'info'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "visible",
          "type": "boolean",
          "mutable": false,
          "attr": "visible",
          "reflectToAttr": false,
          "docs": "If true, the alert will be visible.",
          "docsTags": [],
          "default": "true",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "close",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "",
          "docsTags": []
        },
        {
          "event": "component-library-analytics",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "",
          "docsTags": []
        },
        {
          "event": "va-component-did-load",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Fires when the component has successfully finished rendering for the first\ntime.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-checkbox/va-checkbox.tsx",
      "encapsulation": "shadow",
      "tag": "va-checkbox",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "ariaDescribedby",
          "type": "string",
          "mutable": false,
          "attr": "aria-describedby",
          "reflectToAttr": false,
          "docs": "The aria-describedby attribute for the <intput> in the shadow DOM.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "checked",
          "type": "boolean",
          "mutable": true,
          "attr": "checked",
          "reflectToAttr": false,
          "docs": "Whether the checkbox is checked or not.\n\nNote: Because this isn't reflective, vaCheckbox.getAttribute('checked')\nwill not reflect the correct value. Use the property vaCheckbox.checked\ninstead.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "description",
          "type": "string",
          "mutable": false,
          "attr": "description",
          "reflectToAttr": false,
          "docs": "The description to render. If this prop exists, va-checkbox will render it\ninstead of the named slot.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "enableAnalytics",
          "type": "boolean",
          "mutable": false,
          "attr": "enable-analytics",
          "reflectToAttr": false,
          "docs": "True if the analytics event should fire.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "error",
          "type": "HTMLElement | string",
          "mutable": false,
          "attr": "error",
          "reflectToAttr": false,
          "docs": "The error message to render.",
          "docsTags": [],
          "values": [
            {
              "type": "HTMLElement"
            },
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "The label for the checkbox.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "Set the input to required and render the (Required) text.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "component-library-analytics",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event used to track usage of the component. This is emitted when the\ninput value changes and enableAnalytics is true.",
          "docsTags": []
        },
        {
          "event": "vaBlur",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event emitted when the input is blurred.",
          "docsTags": []
        },
        {
          "event": "vaChange",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event emitted when the input value changes.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-on-this-page/va-on-this-page.tsx",
      "encapsulation": "shadow",
      "tag": "va-on-this-page",
      "docs": "This component will render links based on the content around it. It scans the document for any `<h2>`s\ninside of an `<article>` and will create a list of links to the headings.",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-radio/va-radio.tsx",
      "encapsulation": "shadow",
      "tag": "va-radio",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "enableAnalytics",
          "type": "boolean",
          "mutable": false,
          "attr": "enable-analytics",
          "reflectToAttr": false,
          "docs": "Whether or not an analytics event will be fired.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "error",
          "type": "string",
          "mutable": false,
          "attr": "error",
          "reflectToAttr": false,
          "docs": "A string with an error message.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "The text label for the radio group.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "Whether or not this input field is required.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "component-library-analytics",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "",
          "docsTags": []
        },
        {
          "event": "vaValueChange",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "radioOptionSelected",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-radio-option/va-radio-option.tsx",
      "encapsulation": "shadow",
      "tag": "va-radio-option",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "ariaDescribedby",
          "type": "string",
          "mutable": false,
          "attr": "aria-describedby",
          "reflectToAttr": false,
          "docs": "Optional string for the ariaDescribedBy attribute.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "checked",
          "type": "boolean",
          "mutable": false,
          "attr": "checked",
          "reflectToAttr": false,
          "docs": "Whether or not the option is selected.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "The text label for the input element.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "The name attribute for the input element.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": false,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "The value attribute for the input element.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "radioOptionSelected",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-select/va-select.tsx",
      "encapsulation": "shadow",
      "tag": "va-select",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "enableAnalytics",
          "type": "boolean",
          "mutable": false,
          "attr": "enable-analytics",
          "reflectToAttr": false,
          "docs": "Whether or not to fire the analytics events",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "error",
          "type": "string",
          "mutable": false,
          "attr": "error",
          "reflectToAttr": false,
          "docs": "Error message to display. When defined, this indicates an error.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Text label for the field.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Name attribute for the select field.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "Whether or not this is a required field.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": true,
          "docs": "Selected value (will get updated on select).",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "component-library-analytics",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "",
          "docsTags": []
        },
        {
          "event": "vaKeyDown",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "",
          "docsTags": []
        },
        {
          "event": "vaSelect",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-text-input/va-text-input.tsx",
      "encapsulation": "shadow",
      "tag": "va-text-input",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "ariaDescribedby",
          "type": "string",
          "mutable": false,
          "attr": "aria-describedby",
          "reflectToAttr": false,
          "docs": "The aria-describedby attribute for the <intput> in the shadow DOM.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "autocomplete",
          "type": "string",
          "mutable": false,
          "attr": "autocomplete",
          "reflectToAttr": false,
          "docs": "What to tell the browser to auto-complete the field with.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "enableAnalytics",
          "type": "boolean",
          "mutable": false,
          "attr": "enable-analytics",
          "reflectToAttr": false,
          "docs": "Emit component-library-analytics events on the blur event.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "error",
          "type": "HTMLElement | string",
          "mutable": false,
          "attr": "error",
          "reflectToAttr": false,
          "docs": "The error message to render.",
          "docsTags": [],
          "values": [
            {
              "type": "HTMLElement"
            },
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "label",
          "type": "HTMLElement | string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "The label for the text input.",
          "docsTags": [],
          "values": [
            {
              "type": "HTMLElement"
            },
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "maxlength",
          "type": "number",
          "mutable": false,
          "attr": "maxlength",
          "reflectToAttr": false,
          "docs": "The maximum number of characters allowed in the input.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "The name to pass to the input element.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "mutable": false,
          "attr": "placeholder",
          "reflectToAttr": false,
          "docs": "Placeholder text to show in the input field.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "Set the input to required and render the (Required) text.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "component-library-analytics",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event used to track usage of the component. This is emitted when the\ninput is blurred and enableAnalytics is true.",
          "docsTags": []
        },
        {
          "event": "vaBlur",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event emitted when the input is blurred.",
          "docsTags": []
        },
        {
          "event": "vaChange",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event emitted when the input value changes",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    }
  ]
}