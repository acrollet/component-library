{
  "timestamp": "2021-05-05T12:49:17",
  "compiler": {
    "name": "@stencil/core",
    "version": "2.4.0",
    "typescriptVersion": "4.1.3"
  },
  "components": [
    {
      "filePath": "./src/components/my-component/my-component.tsx",
      "encapsulation": "shadow",
      "tag": "my-component",
      "readme": "# my-component\r\n\r\n\r\n\r",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "first",
          "type": "string",
          "mutable": false,
          "attr": "first",
          "reflectToAttr": false,
          "docs": "The first name",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "last",
          "type": "string",
          "mutable": false,
          "attr": "last",
          "reflectToAttr": false,
          "docs": "The last name",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "middle",
          "type": "string",
          "mutable": false,
          "attr": "middle",
          "reflectToAttr": false,
          "docs": "The middle name",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-accordion/va-accordion.tsx",
      "encapsulation": "shadow",
      "tag": "va-accordion",
      "docs": "Accordions are a list of headers that can be clicked to hide or reveal additional content.\r\n\r\n## Usability\r\n### When to use\r\n- Users only need a few specific pieces of content within a page.\r\n- Information needs to be displayed in a small space.\r\n\r\n### When to consider something else\r\n- If visitors need to see most or all of the information on a page. Use well-formatted text instead.\r\n- If there is not enough content to warrant condensing. Accordions increase cognitive load and interaction cost, as users have to make decisions about what headers to click on.\r\n\r\n### Guidance\r\n\r\n- Allow users to click anywhere in the header area to expand or collapse the content; a larger target is easier to manipulate.\r\n- Make sure interactive elements within the collapsible region are far enough from the headers that users donâ€™t accidentally trigger a collapse. (The exact distance depends on the device.",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "bordered",
          "type": "boolean",
          "mutable": false,
          "attr": "bordered",
          "reflectToAttr": false,
          "docs": "Whether or not the accordion items will have borders",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "multi",
          "type": "boolean",
          "mutable": false,
          "attr": "multi",
          "reflectToAttr": false,
          "docs": "True if multiple items can be opened at once",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [
        {
          "event": "accordionItemToggled",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-accordion/va-accordion-item.tsx",
      "encapsulation": "shadow",
      "tag": "va-accordion-item",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "header",
          "type": "string",
          "mutable": false,
          "attr": "header",
          "reflectToAttr": false,
          "docs": "The accordion item header text",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "level",
          "type": "number",
          "mutable": false,
          "attr": "level",
          "reflectToAttr": false,
          "docs": "Header level for button wrapper. Must be between 1 and 6",
          "docsTags": [],
          "default": "2",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "open",
          "type": "boolean",
          "mutable": false,
          "attr": "open",
          "reflectToAttr": false,
          "docs": "True if the item is open",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "subheader",
          "type": "string",
          "mutable": false,
          "attr": "subheader",
          "reflectToAttr": false,
          "docs": "Optional accordion item subheader text. Default is null.",
          "docsTags": [],
          "default": "null",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "accordionItemToggled",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "This event is fired so that `<va-accordion>` can manage which items are opened or closed",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-alert/va-alert.tsx",
      "encapsulation": "shadow",
      "tag": "va-alert",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "backgroundOnly",
          "type": "boolean",
          "mutable": false,
          "attr": "background-only",
          "reflectToAttr": false,
          "docs": "If true, renders the alert with only a background color corresponding\r\nto the status - no icon or left border.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "closeBtnAriaLabel",
          "type": "string",
          "mutable": false,
          "attr": "close-btn-aria-label",
          "reflectToAttr": false,
          "docs": "Aria-label text for the close button.",
          "docsTags": [],
          "default": "'Close notification'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "closeable",
          "type": "boolean",
          "mutable": false,
          "attr": "closeable",
          "reflectToAttr": false,
          "docs": "If true, a close button will be displayed.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disableAnalytics",
          "type": "boolean",
          "mutable": false,
          "attr": "disable-analytics",
          "reflectToAttr": false,
          "docs": "If true, doesn't fire the CustomEvent which can be used for analytics tracking.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "status",
          "type": "string",
          "mutable": false,
          "attr": "status",
          "reflectToAttr": false,
          "docs": "Determines the icon and border/background color.\r\nOne of `info`, `error`, `success`, `warning`, or `continue`",
          "docsTags": [],
          "default": "'info'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "visible",
          "type": "boolean",
          "mutable": false,
          "attr": "visible",
          "reflectToAttr": false,
          "docs": "If true, the alert will be visible.",
          "docsTags": [],
          "default": "true",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "close",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "",
          "docsTags": []
        },
        {
          "event": "component-library-analytics",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-on-this-page/va-on-this-page.tsx",
      "encapsulation": "shadow",
      "tag": "va-on-this-page",
      "docs": "This component will render links based on the content around it. It scans the document for any `<h2>`s\r\ninside of an `<article>` and will create a list of links to the headings.",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-pagination/va-pagination.tsx",
      "encapsulation": "scoped",
      "tag": "va-pagination",
      "docs": "Pagination is a component that displays a list of links that allow paging\r\nthrough results\r\n\r\n## Accessibility\r\n- The component has a wrapping `<nav>` with `aria-label=\"pagination\"` included\r\n- Links inside of a `<ul>` list\r\n- Includes `aria-current=\"page\"` on the current page link",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "edges",
          "type": "number",
          "mutable": false,
          "attr": "edges",
          "reflectToAttr": false,
          "docs": "Number of pages to show on the edges; maxes out at 3",
          "docsTags": [],
          "default": "1",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "linkAriaLabel",
          "type": "string",
          "mutable": false,
          "attr": "link-aria-label",
          "reflectToAttr": false,
          "docs": "Text added to aria-labels. Any included `{page}` will be replaced with the\r\nassociated page number",
          "docsTags": [],
          "default": "'Load page {page}'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "maxVisible",
          "type": "number",
          "mutable": false,
          "attr": "max-visible",
          "reflectToAttr": false,
          "docs": "The maximum number of pages to show at once. This includes the 2 edges & 2\r\nellipsis even when not visible. Best if this is an odd number to maintain\r\nsymmetry",
          "docsTags": [],
          "default": "9",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "page",
          "type": "number",
          "mutable": false,
          "attr": "page",
          "reflectToAttr": true,
          "docs": "The current page number",
          "docsTags": [],
          "default": "1",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "total",
          "type": "number",
          "mutable": false,
          "attr": "total",
          "reflectToAttr": false,
          "docs": "The total number of pages",
          "docsTags": [],
          "default": "1",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "pageSelect",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "This event is fired when a pagination link is selected",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    }
  ]
}